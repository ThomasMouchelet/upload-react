{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _slicedToArray = require(\"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar net = require(\"net\");\n\nvar execa = require(\"execa\");\n\nvar dests = [\"default\", \"0.0.0.0\", \"0.0.0.0/0\", \"::\", \"::/0\"];\nvar args = {\n  v4: [\"-rn\", \"-f\", \"inet\"],\n  v6: [\"-rn\", \"-f\", \"inet6\"]\n};\n\nvar parse = function parse(stdout) {\n  var result;\n  (stdout || \"\").trim().split(\"\\n\").some(function (line) {\n    var _ref = line.split(/ +/) || [],\n        _ref2 = _slicedToArray(_ref, 4),\n        target = _ref2[0],\n        gateway = _ref2[1],\n        _ = _ref2[2],\n        iface = _ref2[3];\n\n    if (dests.includes(target) && gateway && net.isIP(gateway)) {\n      result = {\n        gateway: gateway,\n        interface: iface ? iface : null\n      };\n      return true;\n    }\n  });\n\n  if (!result) {\n    throw new Error(\"Unable to determine default gateway\");\n  }\n\n  return result;\n};\n\nvar promise =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(family) {\n    var _ref4, stdout;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return execa(\"netstat\", args[family]);\n\n          case 2:\n            _ref4 = _context.sent;\n            stdout = _ref4.stdout;\n            return _context.abrupt(\"return\", parse(stdout));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function promise(_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar sync = function sync(family) {\n  var _execa$sync = execa.sync(\"netstat\", args[family]),\n      stdout = _execa$sync.stdout;\n\n  return parse(stdout);\n};\n\nmodule.exports.v4 = function () {\n  return promise(\"v4\");\n};\n\nmodule.exports.v6 = function () {\n  return promise(\"v6\");\n};\n\nmodule.exports.v4.sync = function () {\n  return sync(\"v4\");\n};\n\nmodule.exports.v6.sync = function () {\n  return sync(\"v6\");\n};","map":null,"metadata":{},"sourceType":"script"}