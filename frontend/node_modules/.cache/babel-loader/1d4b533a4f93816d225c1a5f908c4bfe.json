{"ast":null,"code":"import _classCallCheck from \"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport FormUpload from './components/FormUpload';\nimport socketIOClient from 'socket.io-client';\n\nvar requestIp = require('request-ip');\n\nvar internalIp = require('internal-ip');\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      files: [],\n      endpoint: \"http://\".concat(internalIp.v4.sync())\n    };\n\n    _this.componentDidMount = function () {\n      var ipMiddleware = function ipMiddleware(req, res, next) {\n        var clientIp = requestIp.getClientIp(req);\n        next();\n      };\n\n      console.log(ipMiddleware);\n      console.log(internalIp.v4.sync());\n      var socket = socketIOClient(_this.state.endpoint);\n      socket.on('reloadFilesList', function (data) {\n        _this.setState({\n          files: data\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      fetch(\"\".concat(this.state.endpoint, \":8000/files\"), {\n        method: 'POST'\n      }).then(function (response, error) {\n        response.json().then(function (body) {\n          _this2.setState({\n            files: body.files\n          });\n        }).catch(function (err) {\n          console.log('caught it!', err);\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var files = this.state.files.map(function (file) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, file);\n      });\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(FormUpload, {\n        endpoint: this.state.endpoint,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"filesList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Upload files successfully ( \", files.length, \" )\"), files));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/tmouchelet-admin/Documents/upload-node-master/frontend/src/App.js"],"names":["React","Component","FormUpload","socketIOClient","requestIp","require","internalIp","App","state","files","endpoint","v4","sync","componentDidMount","ipMiddleware","req","res","next","clientIp","getClientIp","console","log","socket","on","data","setState","fetch","method","then","response","error","json","body","catch","err","map","file","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AACA,IAAMC,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAzB;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B;;IAEME,G;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,QAAQ,mBAAYJ,UAAU,CAACK,EAAX,CAAcC,IAAd,EAAZ;AAFF,K;;UAKRC,iB,GAAoB,YAAM;AACxB,UAAMC,YAAY,GAAG,SAAfA,YAAe,CAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC7C,YAAMC,QAAQ,GAAGd,SAAS,CAACe,WAAV,CAAsBJ,GAAtB,CAAjB;AACAE,QAAAA,IAAI;AACL,OAHD;;AAIAG,MAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AAEAM,MAAAA,OAAO,CAACC,GAAR,CAAYf,UAAU,CAACK,EAAX,CAAcC,IAAd,EAAZ;AAEA,UAAMU,MAAM,GAAGnB,cAAc,CAAC,MAAKK,KAAL,CAAWE,QAAZ,CAA7B;AACAY,MAAAA,MAAM,CAACC,EAAP,CAAU,iBAAV,EAA6B,UAACC,IAAD,EAAU;AACrC,cAAKC,QAAL,CAAc;AAAEhB,UAAAA,KAAK,EAAEe;AAAT,SAAd;AACD,OAFD;AAGD,K;;;;;;;yCAEoB;AAAA;;AACnBE,MAAAA,KAAK,WAAI,KAAKlB,KAAL,CAAWE,QAAf,kBAAsC;AACzCiB,QAAAA,MAAM,EAAE;AADiC,OAAtC,CAAL,CAEGC,IAFH,CAEQ,UAACC,QAAD,EAAWC,KAAX,EAAqB;AAC3BD,QAAAA,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqB,UAACI,IAAD,EAAU;AAC7B,UAAA,MAAI,CAACP,QAAL,CAAc;AAAEhB,YAAAA,KAAK,EAAEuB,IAAI,CAACvB;AAAd,WAAd;AACD,SAFD,EAEGwB,KAFH,CAES,UAAAC,GAAG,EAAI;AACdd,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Ba,GAA1B;AACD,SAJD;AAKD,OARD;AASD;;;6BAEQ;AACP,UAAMzB,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiB0B,GAAjB,CAAqB,UAAAC,IAAI;AAAA,eAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIA,IAAJ,CAAJ;AAAA,OAAzB,CAAd;AAEA,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,QAAQ,EAAE,KAAK5B,KAAL,CAAWE,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAiCD,KAAK,CAAC4B,MAAvC,OADF,EAEG5B,KAFH,CAFF,CADF;AASD;;;;EA9CeR,S;;AAiDlB,eAAeM,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport FormUpload from './components/FormUpload';\nimport socketIOClient from 'socket.io-client';\nconst requestIp = require('request-ip');\nconst internalIp = require('internal-ip');\n\nclass App extends Component {\n\n  state = {\n    files: [],\n    endpoint: `http://${internalIp.v4.sync()}`\n  }\n\n  componentDidMount = () => {\n    const ipMiddleware = function (req, res, next) {\n      const clientIp = requestIp.getClientIp(req);\n      next();\n    };\n    console.log(ipMiddleware)\n\n    console.log(internalIp.v4.sync())\n\n    const socket = socketIOClient(this.state.endpoint);\n    socket.on('reloadFilesList', (data) => {\n      this.setState({ files: data })\n    })\n  }\n\n  componentWillMount() {\n    fetch(`${this.state.endpoint}:8000/files`, {\n      method: 'POST',\n    }).then((response, error) => {\n      response.json().then((body) => {\n        this.setState({ files: body.files });\n      }).catch(err => {\n        console.log('caught it!', err);\n      });\n    });\n  }\n\n  render() {\n    const files = this.state.files.map(file => <p>{file}</p>);\n\n    return (\n      <div className=\"App\">\n        <FormUpload endpoint={this.state.endpoint} />\n        <div className=\"filesList\">\n          <h2>Upload files successfully ( {files.length} )</h2>\n          {files}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}