{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/node_modules/@babel/runtime/helpers/objectSpread\");\n\nvar _asyncToGenerator = require(\"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _wrapNativeSuper = require(\"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nvar pump = require('pump');\n\nvar bufferStream = require('./buffer-stream');\n\nvar MaxBufferError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(MaxBufferError, _Error);\n\n  function MaxBufferError() {\n    var _this;\n\n    _classCallCheck(this, MaxBufferError);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MaxBufferError).call(this, 'maxBuffer exceeded'));\n    _this.name = 'MaxBufferError';\n    return _this;\n  }\n\n  return MaxBufferError;\n}(_wrapNativeSuper(Error));\n\nfunction getStream(_x, _x2) {\n  return _getStream.apply(this, arguments);\n}\n\nfunction _getStream() {\n  _getStream = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(inputStream, options) {\n    var _options, maxBuffer, stream;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (inputStream) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Promise.reject(new Error('Expected a stream')));\n\n          case 2:\n            options = _objectSpread({\n              maxBuffer: Infinity\n            }, options);\n            _options = options, maxBuffer = _options.maxBuffer;\n            _context.next = 6;\n            return new Promise(function (resolve, reject) {\n              var rejectPromise = function rejectPromise(error) {\n                if (error) {\n                  // A null check\n                  error.bufferedData = stream.getBufferedValue();\n                }\n\n                reject(error);\n              };\n\n              stream = pump(inputStream, bufferStream(options), function (error) {\n                if (error) {\n                  rejectPromise(error);\n                  return;\n                }\n\n                resolve();\n              });\n              stream.on('data', function () {\n                if (stream.getBufferedLength() > maxBuffer) {\n                  rejectPromise(new MaxBufferError());\n                }\n              });\n            });\n\n          case 6:\n            return _context.abrupt(\"return\", stream.getBufferedValue());\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _getStream.apply(this, arguments);\n}\n\nmodule.exports = getStream; // TODO: Remove this for the next major release\n\nmodule.exports.default = getStream;\n\nmodule.exports.buffer = function (stream, options) {\n  return getStream(stream, _objectSpread({}, options, {\n    encoding: 'buffer'\n  }));\n};\n\nmodule.exports.array = function (stream, options) {\n  return getStream(stream, _objectSpread({}, options, {\n    array: true\n  }));\n};\n\nmodule.exports.MaxBufferError = MaxBufferError;","map":null,"metadata":{},"sourceType":"script"}