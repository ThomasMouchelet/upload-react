{"ast":null,"code":"'use strict';\n\nvar _toConsumableArray = require(\"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar SPACES_REGEXP = / +/g;\n\nvar joinCommand = function joinCommand(file) {\n  var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  if (!Array.isArray(args)) {\n    return file;\n  }\n\n  return [file].concat(_toConsumableArray(args)).join(' ');\n}; // Allow spaces to be escaped by a backslash if not meant as a delimiter\n\n\nvar handleEscaping = function handleEscaping(tokens, token, index) {\n  if (index === 0) {\n    return [token];\n  }\n\n  var previousToken = tokens[tokens.length - 1];\n\n  if (previousToken.endsWith('\\\\')) {\n    return [].concat(_toConsumableArray(tokens.slice(0, -1)), [\"\".concat(previousToken.slice(0, -1), \" \").concat(token)]);\n  }\n\n  return [].concat(_toConsumableArray(tokens), [token]);\n}; // Handle `execa.command()`\n\n\nvar parseCommand = function parseCommand(command) {\n  return command.trim().split(SPACES_REGEXP).reduce(handleEscaping, []);\n};\n\nmodule.exports = {\n  joinCommand: joinCommand,\n  parseCommand: parseCommand\n};","map":null,"metadata":{},"sourceType":"script"}