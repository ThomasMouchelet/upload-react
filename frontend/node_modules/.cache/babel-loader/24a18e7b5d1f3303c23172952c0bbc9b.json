{"ast":null,"code":"import _classCallCheck from \"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/src/components/FormUpload.js\";\nimport React from 'react';\nimport Dropzone from 'react-dropzone';\nimport config from '../constants';\n\nvar FormUpload =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FormUpload, _React$Component);\n\n  function FormUpload() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FormUpload);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FormUpload)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      uploadState: false,\n      file: [],\n      allowToUpload: false\n    };\n\n    _this.onDrop = function (acceptedFiles, rejectedFiles) {\n      if (acceptedFiles) {\n        _this.setState({\n          file: acceptedFiles\n        }, function () {\n          _this.checkForm();\n        });\n      }\n    };\n\n    _this.checkForm = function () {\n      if (_this.firstName.value.length > 0 && _this.lastName.value.length > 0 && _this.state.file.length > 0) {\n        _this.setState({\n          allowToUpload: true\n        });\n      } else {\n        _this.setState({\n          allowToUpload: false\n        });\n      }\n    };\n\n    _this.handleUpload = function (e) {\n      e.preventDefault();\n\n      if (_this.state.allowToUpload) {\n        var data = new FormData();\n        var file = _this.state.file[0];\n        data.append('file', file);\n        data.append('extend', file.name.substr(file.name.length - 3));\n        data.append('lastname', _this.lastName.value);\n        data.append('firstname', _this.firstName.value);\n        fetch(\"\".concat(config.url, \":8000/upload\"), {\n          method: 'POST',\n          body: data\n        }).then(function (response, error) {\n          response.json().then(function (body) {\n            _this.setState({\n              uploadState: true\n            });\n\n            _this.formUpload.reset();\n          }).catch(function (err) {\n            console.log('caught it!', err);\n          });\n        });\n      }\n    };\n\n    _this.focusInput = function (event) {\n      var label = event.target.parentNode.querySelector(\"label\");\n      var input = event.target.parentNode.querySelector(\"input\");\n      input.focus();\n\n      if (input.value) {\n        label.classList.add(\"hide\");\n      } else {\n        label.classList.remove(\"hide\");\n        label.classList.add(\"focus\");\n      }\n    };\n\n    _this.blurInput = function (event) {\n      var label = event.target.parentNode.querySelector(\"label\");\n      var input = event.target.parentNode.querySelector(\"input\");\n\n      if (input.value) {\n        label.classList.remove(\"focus\");\n        label.classList.add(\"hide\");\n      } else {\n        label.classList.remove(\"hide\");\n        label.classList.remove(\"focus\");\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(FormUpload, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"form\", {\n        className: this.state.uploadState ? \"formUpload uploadSucess\" : \"formUpload uploadDefault\",\n        onChange: this.checkForm,\n        onSubmit: this.handleUpload,\n        ref: function ref(_ref4) {\n          _this2.formUpload = _ref4;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Dropzone, {\n        accept: \".rar, .zip, application/x-rar-compressed, application/rar, application/octet-stream, application/zip, application/x-zip-compressed\",\n        onDrop: this.onDrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, function (_ref) {\n        var getRootProps = _ref.getRootProps,\n            getInputProps = _ref.getInputProps,\n            isDragActive = _ref.isDragActive,\n            isDragAccept = _ref.isDragAccept,\n            isDragReject = _ref.isDragReject,\n            acceptedFiles = _ref.acceptedFiles,\n            rejectedFiles = _ref.rejectedFiles;\n        var classList = \"dropzone\";\n        var message = \"Ajouter un fichier\";\n\n        if (rejectedFiles.length > 0) {\n          message = \"ProblÃ¨me de format\";\n        } else if (acceptedFiles.length > 0) {\n          _this2.state.file.map(function (item) {\n            return message = item.name;\n          });\n        }\n\n        classList = isDragActive ? \"dropzone dropActive\" : \"dropzone\";\n        classList = isDragReject ? \"dropzone rejectStyle\" : \"dropzone\";\n        classList = isDragAccept ? \"dropzone acceptDrag\" : \"dropzone\";\n        return React.createElement(\"div\", Object.assign({}, getRootProps(), {\n          className: classList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        })), isDragActive ? React.createElement(\"div\", {\n          className: \"onDrop\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, \"Drop files here...\")) : React.createElement(\"div\", {\n          className: \"addFile\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-plus\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }), React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, message)));\n      }), React.createElement(\"div\", {\n        className: \"formGroup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        onClick: this.focusInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Votre nom\"), React.createElement(\"input\", {\n        onFocus: this.focusInput,\n        onBlur: this.blurInput,\n        ref: function ref(_ref2) {\n          _this2.lastName = _ref2;\n        },\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"formGroup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        onClick: this.focusInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Votre pr\\xE9nom\"), React.createElement(\"input\", {\n        onFocus: this.focusInput,\n        onBlur: this.blurInput,\n        ref: function ref(_ref3) {\n          _this2.firstName = _ref3;\n        },\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"formButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, this.state.allowToUpload ? React.createElement(\"button\", {\n        className: \"ready\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Upload\") : React.createElement(\"button\", {\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Upload\")), React.createElement(\"div\", {\n        className: \"successUpload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return FormUpload;\n}(React.Component);\n\nexport default FormUpload;","map":{"version":3,"sources":["/Users/tmouchelet-admin/Documents/upload-node-master/frontend/src/components/FormUpload.js"],"names":["React","Dropzone","config","FormUpload","state","uploadState","file","allowToUpload","onDrop","acceptedFiles","rejectedFiles","setState","checkForm","firstName","value","length","lastName","handleUpload","e","preventDefault","data","FormData","append","name","substr","fetch","url","method","body","then","response","error","json","formUpload","reset","catch","err","console","log","focusInput","event","label","target","parentNode","querySelector","input","focus","classList","add","remove","blurInput","ref","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","message","map","item","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Dropzone from 'react-dropzone';\nimport config from '../constants';\n\nclass FormUpload extends React.Component {\n  state = {\n    uploadState: false,\n    file: [],\n    allowToUpload: false\n  };\n\n  onDrop = (acceptedFiles, rejectedFiles) => {\n    if (acceptedFiles) {\n      this.setState({ file: acceptedFiles }, () => {\n        this.checkForm();\n      });\n    }\n  }\n\n  checkForm = () => {\n    if (this.firstName.value.length > 0 &&\n      this.lastName.value.length > 0 &&\n      this.state.file.length > 0) {\n      this.setState({ allowToUpload: true });\n    } else {\n      this.setState({ allowToUpload: false });\n    }\n  }\n\n  handleUpload = (e) => {\n    e.preventDefault();\n\n    if (this.state.allowToUpload) {\n      const data = new FormData();\n      let file = this.state.file[0];\n\n      data.append('file', file);\n      data.append('extend', file.name.substr(file.name.length - 3))\n      data.append('lastname', this.lastName.value);\n      data.append('firstname', this.firstName.value);\n\n      fetch(`${config.url}:8000/upload`, {\n        method: 'POST',\n        body: data,\n      }).then((response, error) => {\n        response.json().then((body) => {\n          this.setState({ uploadState: true });\n          this.formUpload.reset();\n        }).catch(err => {\n          console.log('caught it!', err);\n        });\n      });\n    }\n  }\n  focusInput = (event) => {\n    let label = event.target.parentNode.querySelector(\"label\");\n    let input = event.target.parentNode.querySelector(\"input\");\n    input.focus();\n    if (input.value) {\n      label.classList.add(\"hide\");\n    } else {\n      label.classList.remove(\"hide\");\n      label.classList.add(\"focus\");\n    }\n  }\n  blurInput = (event) => {\n    let label = event.target.parentNode.querySelector(\"label\");\n    let input = event.target.parentNode.querySelector(\"input\");\n    if (input.value) {\n      label.classList.remove(\"focus\");\n      label.classList.add(\"hide\");\n    } else {\n      label.classList.remove(\"hide\");\n      label.classList.remove(\"focus\");\n    }\n  }\n\n  render() {\n    return (\n      <form className={this.state.uploadState ? \"formUpload uploadSucess\" : \"formUpload uploadDefault\"} onChange={this.checkForm} onSubmit={this.handleUpload} ref={(ref) => { this.formUpload = ref; }}>\n        <Dropzone accept=\".rar, .zip, application/x-rar-compressed, application/rar, application/octet-stream, application/zip, application/x-zip-compressed\" onDrop={this.onDrop}>\n          {({ getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject, acceptedFiles, rejectedFiles }) => {\n            let classList = \"dropzone\"\n            let message = \"Ajouter un fichier\"\n\n            if (rejectedFiles.length > 0) {\n              message = \"ProblÃ¨me de format\";\n            } else if (acceptedFiles.length > 0) {\n              this.state.file.map(item => message = item.name)\n            }\n\n            classList = isDragActive ? \"dropzone dropActive\" : \"dropzone\";\n            classList = isDragReject ? \"dropzone rejectStyle\" : \"dropzone\";\n            classList = isDragAccept ? \"dropzone acceptDrag\" : \"dropzone\";\n\n            return (\n              <div\n                {...getRootProps()}\n                className={classList}\n              >\n                <input {...getInputProps()} />\n                {\n                  isDragActive ?\n                    <div className=\"onDrop\">\n                      <p>Drop files here...</p>\n                    </div>\n                    :\n                    <div className=\"addFile\">\n                      <i className=\"fas fa-plus\"></i>\n                      <h2>{message}</h2>\n                    </div>\n                }\n              </div>\n            )\n          }}\n        </Dropzone>\n        <div className=\"formGroup\">\n          <label onClick={this.focusInput}>Votre nom</label>\n          <input onFocus={this.focusInput} onBlur={this.blurInput} ref={(ref) => { this.lastName = ref; }} type=\"text\" />\n        </div>\n        <div className=\"formGroup\">\n          <label onClick={this.focusInput}>Votre prÃ©nom</label>\n          <input onFocus={this.focusInput} onBlur={this.blurInput} ref={(ref) => { this.firstName = ref; }} type=\"text\" />\n        </div>\n        <div className=\"formButton\">\n          {this.state.allowToUpload ?\n            <button className=\"ready\">Upload</button> :\n            <button disabled>Upload</button>\n          }\n        </div>\n        <div className=\"successUpload\">\n          <div>\n            <i className=\"fas fa-check\"></i>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default FormUpload;"]},"metadata":{},"sourceType":"module"}