{"ast":null,"code":"import _classCallCheck from \"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tmouchelet-admin/Documents/upload-node-master/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport FormUpload from './components/FormUpload';\nimport socketIOClient from 'socket.io-client';\nimport config from './constants';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      files: [],\n      networkUrl: \"\".concat(config.url),\n      endpoint: \"\".concat(config.url, \":4001\")\n    };\n\n    _this.componentDidMount = function () {\n      var socket = socketIOClient(_this.state.endpoint);\n      socket.on('reloadFilesList', function (data) {\n        _this.setState({\n          files: data\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      fetch(\"\".concat(this.state.networkUrl, \":8000/files\"), {\n        method: 'POST'\n      }).then(function (response, error) {\n        response.json().then(function (body) {\n          _this2.setState({\n            files: body.files\n          });\n        }).catch(function (err) {\n          console.log('caught it!', err);\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var files = this.state.files.map(function (file, key) {\n        React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, file);\n        console.log(key);\n      });\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(FormUpload, {\n        networkUrl: this.state.networkUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"filesList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Upload files successfully ( \", files.length, \" )\"), files));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/tmouchelet-admin/Documents/upload-node-master/frontend/src/App.js"],"names":["React","Component","FormUpload","socketIOClient","config","App","state","files","networkUrl","url","endpoint","componentDidMount","socket","on","data","setState","fetch","method","then","response","error","json","body","catch","err","console","log","map","file","key","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,aAAnB;;IAEMC,G;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,UAAU,YAAKJ,MAAM,CAACK,GAAZ,CAFJ;AAGNC,MAAAA,QAAQ,YAAKN,MAAM,CAACK,GAAZ;AAHF,K;;UAMRE,iB,GAAoB,YAAM;AACxB,UAAMC,MAAM,GAAGT,cAAc,CAAC,MAAKG,KAAL,CAAWI,QAAZ,CAA7B;AACAE,MAAAA,MAAM,CAACC,EAAP,CAAU,iBAAV,EAA6B,UAACC,IAAD,EAAU;AACrC,cAAKC,QAAL,CAAc;AAAER,UAAAA,KAAK,EAAEO;AAAT,SAAd;AACD,OAFD;AAGD,K;;;;;;;yCAEoB;AAAA;;AACnBE,MAAAA,KAAK,WAAI,KAAKV,KAAL,CAAWE,UAAf,kBAAwC;AAC3CS,QAAAA,MAAM,EAAE;AADmC,OAAxC,CAAL,CAEGC,IAFH,CAEQ,UAACC,QAAD,EAAWC,KAAX,EAAqB;AAC3BD,QAAAA,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqB,UAACI,IAAD,EAAU;AAC7B,UAAA,MAAI,CAACP,QAAL,CAAc;AAAER,YAAAA,KAAK,EAAEe,IAAI,CAACf;AAAd,WAAd;AACD,SAFD,EAEGgB,KAFH,CAES,UAAAC,GAAG,EAAI;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,GAA1B;AACD,SAJD;AAKD,OARD;AASD;;;6BAEQ;AACP,UAAMjB,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBoB,GAAjB,CAAqB,UAACC,IAAD,EAAOC,GAAP,EAAe;AAChD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,IAAL;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,OAHa,CAAd;AAKA,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,UAAU,EAAE,KAAKvB,KAAL,CAAWE,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAiCD,KAAK,CAACuB,MAAvC,OADF,EAEGvB,KAFH,CAFF,CADF;AASD;;;;EA1CeN,S;;AA6ClB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport FormUpload from './components/FormUpload';\nimport socketIOClient from 'socket.io-client';\nimport config from './constants';\n\nclass App extends Component {\n\n  state = {\n    files: [],\n    networkUrl: `${config.url}`,\n    endpoint: `${config.url}:4001`\n  }\n\n  componentDidMount = () => {\n    const socket = socketIOClient(this.state.endpoint);\n    socket.on('reloadFilesList', (data) => {\n      this.setState({ files: data })\n    })\n  }\n\n  componentWillMount() {\n    fetch(`${this.state.networkUrl}:8000/files`, {\n      method: 'POST',\n    }).then((response, error) => {\n      response.json().then((body) => {\n        this.setState({ files: body.files });\n      }).catch(err => {\n        console.log('caught it!', err);\n      });\n    });\n  }\n\n  render() {\n    const files = this.state.files.map((file, key) => {\n      <p >{file}</p>\n      console.log(key)\n    });\n\n    return (\n      <div className=\"App\" >\n        <FormUpload networkUrl={this.state.networkUrl} />\n        <div className=\"filesList\">\n          <h2>Upload files successfully ( {files.length} )</h2>\n          {files}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}